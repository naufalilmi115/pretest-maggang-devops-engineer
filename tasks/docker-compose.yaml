services:
  db:
    image: postgres:14.2
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=myuser
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: dimmaryanto93/udemy-springboot-app:latest
    container_name: backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=123
    ports:
      - "8080:8080"
    networks:
      - appnet

  frontend:
    image: dimmaryanto93/udemy-angular-app:latest
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - APPLICATION_PORT=80
      - NGINX_ROOT_DOCUMENT=/var/www/html
      - BACKEND_HOST=backend
      - BACKEND_PORT=8080
      - BACKEND_CONTEXT_PATH=/
    ports:
      - "80:80"
    networks:
      - appnet

  adminer:   
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8082:8080"
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
